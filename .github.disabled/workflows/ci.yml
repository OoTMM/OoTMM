name: Continuous Integration Workflow

on: [push, pull_request, workflow_dispatch]

env:
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Version (Tag)
        if: ${{ contains(github.ref, 'refs/tags/') }}
        run: |
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "ENV_KEYS=${{ github.ref_name }},stable" >> $GITHUB_ENV

      - name: Extract Version (Commit)
        if: ${{ !contains(github.ref, 'refs/tags/') }}
        run: |
          short_sha=$(echo ${{ github.sha }} | cut -c1-7)
          echo "VERSION=dev" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=${short_sha}" >> $GITHUB_ENV
          echo "ENV_KEYS=dev" >> $GITHUB_ENV

      - name: Add n64 toolchain repo
        uses: myci-actions/add-deb-repo@10
        with:
          repo: deb http://practicerom.com/public/packages/debian staging main
          repo-name: practicerom
          keys-asc: https://practicerom.com/public/packages/debian/pgp.pub

      - name: Install system dependencies
        run: sudo apt-get install n64-ultra cmake ninja-build

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'

      - name: Install Third Party dependencies
        run: ./scripts/install-deps.sh

      - name: Install dependencies
        run: pnpm i

      - name: Find references for NX
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master

      - name: Test
        run: npx nx affected -t test --prod

      - name: Build
        run: npx nx affected -t build --prod

      - name: Configure AWS
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tags/')) }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tags/')) }}
        run: npx nx affected -t deploy --prod
        env:
          S3_BUCKET: ${{ vars.S3_BUCKET }}
          NETLIFY_SITE_ID_WEB: ${{ vars.NETLIFY_SITE_ID_WEB }}
          NETLIFY_SITE_ID_STATIC: ${{ vars.NETLIFY_SITE_ID_STATIC }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
