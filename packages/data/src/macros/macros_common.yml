# Util
"has_shared_count(a, b, n)": "has(a, n) || has(b, n)"

# Songs
"has_song_sun": "has(SONG_SUN) || has(SHARED_SONG_SUN) || has_shared_count(SONG_NOTE_SUN, SHARED_SONG_NOTE_SUN, 6)"
"has_song_time": "has(SONG_TIME) || has(SHARED_SONG_TIME) || has_shared_count(SONG_NOTE_TIME, SHARED_SONG_NOTE_TIME, 6)"
"has_song_epona": "has(SONG_EPONA) || has(SHARED_SONG_EPONA) || has_shared_count(SONG_NOTE_EPONA, SHARED_SONG_NOTE_EPONA, 6)"
"has_song_storms": "has(SONG_STORMS) || has(SHARED_SONG_STORMS) || has_shared_count(SONG_NOTE_STORMS, SHARED_SONG_NOTE_STORMS, 6)"
"has_song_emptiness": "has(SONG_EMPTINESS) || has(SHARED_SONG_EMPTINESS) || has_shared_count(SONG_NOTE_EMPTINESS, SHARED_SONG_NOTE_EMPTINESS, 7)"
"has_song_soaring": "has(MM_SONG_SOARING) || has(MM_SONG_NOTE_SOARING, 6)"
"has_song_tp_light": "has(OOT_SONG_TP_LIGHT) || has(OOT_SONG_NOTE_TP_LIGHT, 6)"
"has_song_tp_forest": "has(OOT_SONG_TP_FOREST) || has(OOT_SONG_NOTE_TP_FOREST, 6)"
"has_song_tp_fire": "has(OOT_SONG_TP_FIRE) || has(OOT_SONG_NOTE_TP_FIRE, 8)"
"has_song_tp_water": "has(OOT_SONG_TP_WATER) || has(OOT_SONG_NOTE_TP_WATER, 5)"
"has_song_tp_shadow": "has(OOT_SONG_TP_SHADOW) || has(OOT_SONG_NOTE_TP_SHADOW, 7)"
"has_song_tp_spirit": "has(OOT_SONG_TP_SPIRIT) || has(OOT_SONG_NOTE_TP_SPIRIT, 6)"

"can_play_sun": "has_song_sun && has_ocarina && ocarina_button_right && ocarina_button_down && ocarina_button_up"
"can_play_time": "has_song_time && has_ocarina && ocarina_button_a && ocarina_button_right && ocarina_button_down"
"can_play_epona": "has_song_epona && has_ocarina && ocarina_button_up && ocarina_button_right && ocarina_button_left"
"can_play_storms": "has_song_storms && has_ocarina && ocarina_button_a && ocarina_button_down && ocarina_button_up"
"can_play_emptiness_raw": "has_song_emptiness && has_ocarina && ocarina_button_left && ocarina_button_right && ocarina_button_up && ocarina_button_down"
"can_play_soaring_raw": "has_song_soaring && has_ocarina && ocarina_button_down && ocarina_button_up && ocarina_button_left"
"can_play_tp_light_raw": "has_song_tp_light && has_ocarina && ocarina_button_up && ocarina_button_right && ocarina_button_left"
"can_play_tp_forest_raw": "has_song_tp_forest && has_ocarina && ocarina_button_a && ocarina_button_up && ocarina_button_right && ocarina_button_left"
"can_play_tp_fire_raw": "has_song_tp_fire && has_ocarina && ocarina_button_a && ocarina_button_right && ocarina_button_down"
"can_play_tp_water_raw": "has_song_tp_water && has_ocarina && ocarina_button_a && ocarina_button_right && ocarina_button_down && ocarina_button_left"
"can_play_tp_shadow_raw": "has_song_tp_shadow && has_ocarina && ocarina_button_a && ocarina_button_right && ocarina_button_down && ocarina_button_left"
"can_play_tp_spirit_raw": "has_song_tp_spirit && has_ocarina && ocarina_button_a && ocarina_button_right && ocarina_button_down"

# Misc
"has_magic_jar": "cond(setting(sharedMagic), renewable(SHARED_MAGIC_JAR_SMALL) || renewable(SHARED_MAGIC_JAR_LARGE), renewable(MAGIC_JAR_SMALL) || renewable(MAGIC_JAR_LARGE))"

"can_use_din_raw": "has_magic && cond(setting(sharedSpellFire), has(SHARED_SPELL_FIRE), has(SPELL_FIRE))"
"can_use_farore_raw": "has_magic && cond(setting(sharedSpellWind), has(SHARED_SPELL_WIND), has(SPELL_WIND))"
"can_use_nayru_raw": "has_magic && cond(setting(sharedSpellLove), has(SHARED_SPELL_LOVE), has(SPELL_LOVE))"
"has_iron_boots_raw": "cond(setting(sharedBootsIron), has(SHARED_BOOTS_IRON), has(BOOTS_IRON))"
"has_hover_boots_raw": "cond(setting(sharedBootsHover), has(SHARED_BOOTS_HOVER), has(BOOTS_HOVER))"
"has_tunic_goron_raw": "cond(setting(sharedTunicGoron), has(SHARED_TUNIC_GORON), has(TUNIC_GORON))"
"has_tunic_zora_raw": "cond(setting(sharedTunicZora), has(SHARED_TUNIC_ZORA), has(TUNIC_ZORA))"
"has_elegy_raw": "cond(setting(sharedSongElegy), has(SHARED_SONG_EMPTINESS), has(SONG_EMPTINESS))"
"has_hammer_raw": "cond(setting(sharedHammer), has(SHARED_HAMMER), has(HAMMER))"

"has_scale_raw(x)": "cond(setting(sharedScales), has(SHARED_SCALE, x), has(SCALE, x))"
"has_strength_raw(x)": "cond(setting(sharedStrength), has(SHARED_STRENGTH, x), has(STRENGTH, x))"

"wisp_enabled_free": "setting(regionState, free)"
"wisp_enabled_boss(x)": "false"
"wisp_enabled_reward(x)": "setting(regionState, reward) && has(x)"
"wisp_enabled(boss, reward)": "wisp_enabled_free || wisp_enabled_boss(boss) || wisp_enabled_reward(reward)"

# Shared Souls
"shared_soul_enemy(a, b)": "cond(setting(sharedSoulsEnemy), soul_enemy(b), soul_enemy(a))"
"soul_octorok": "shared_soul_enemy(SOUL_ENEMY_OCTOROK, SHARED_SOUL_ENEMY_OCTOROK)"
"soul_wallmaster": "shared_soul_enemy(SOUL_ENEMY_WALLMASTER, SHARED_SOUL_ENEMY_WALLMASTER)"
"soul_dodongo": "shared_soul_enemy(SOUL_ENEMY_DODONGO, SHARED_SOUL_ENEMY_DODONGO)"
"soul_keese": "shared_soul_enemy(SOUL_ENEMY_KEESE, SHARED_SOUL_ENEMY_KEESE)"
"soul_tektite": "shared_soul_enemy(SOUL_ENEMY_TEKTITE, SHARED_SOUL_ENEMY_TEKTITE)"
"soul_peahat": "shared_soul_enemy(SOUL_ENEMY_PEAHAT, SHARED_SOUL_ENEMY_PEAHAT)"
"soul_lizalfos_dinalfos": "shared_soul_enemy(SOUL_ENEMY_LIZALFOS_DINALFOS, SHARED_SOUL_ENEMY_LIZALFOS_DINALFOS)"
"soul_skulltula": "shared_soul_enemy(SOUL_ENEMY_SKULLTULA, SHARED_SOUL_ENEMY_SKULLTULA)"
"soul_armos": "shared_soul_enemy(SOUL_ENEMY_ARMOS, SHARED_SOUL_ENEMY_ARMOS)"
"soul_deku_baba": "shared_soul_enemy(SOUL_ENEMY_DEKU_BABA, SHARED_SOUL_ENEMY_DEKU_BABA)"
"soul_deku_scrub": "shared_soul_enemy(SOUL_ENEMY_DEKU_SCRUB, SHARED_SOUL_ENEMY_DEKU_SCRUB)"
"soul_bubble": "shared_soul_enemy(SOUL_ENEMY_BUBBLE, SHARED_SOUL_ENEMY_BUBBLE)"
"soul_beamos": "shared_soul_enemy(SOUL_ENEMY_BEAMOS, SHARED_SOUL_ENEMY_BEAMOS)"
"soul_redead_gibdo": "shared_soul_enemy(SOUL_ENEMY_REDEAD_GIBDO, SHARED_SOUL_ENEMY_REDEAD_GIBDO)"
"soul_skullwalltula": "shared_soul_enemy(SOUL_ENEMY_SKULLWALLTULA, SHARED_SOUL_ENEMY_SKULLWALLTULA)"
"soul_shell_blade": "shared_soul_enemy(SOUL_ENEMY_SHELL_BLADE, SHARED_SOUL_ENEMY_SHELL_BLADE)"
"soul_like_like": "shared_soul_enemy(SOUL_ENEMY_LIKE_LIKE, SHARED_SOUL_ENEMY_LIKE_LIKE)"
"soul_iron_knuckle": "shared_soul_enemy(SOUL_ENEMY_IRON_KNUCKLE, SHARED_SOUL_ENEMY_IRON_KNUCKLE)"
"soul_freezard": "shared_soul_enemy(SOUL_ENEMY_FREEZARD, SHARED_SOUL_ENEMY_FREEZARD)"
"soul_wolfos": "shared_soul_enemy(SOUL_ENEMY_WOLFOS, SHARED_SOUL_ENEMY_WOLFOS)"
"soul_guay": "shared_soul_enemy(SOUL_ENEMY_GUAY, SHARED_SOUL_ENEMY_GUAY)"
"soul_flying_pot": "shared_soul_enemy(SOUL_ENEMY_FLYING_POT, SHARED_SOUL_ENEMY_FLYING_POT)"
"soul_floormaster": "shared_soul_enemy(SOUL_ENEMY_FLOORMASTER, SHARED_SOUL_ENEMY_FLOORMASTER)"
"soul_leever": "shared_soul_enemy(SOUL_ENEMY_LEEVER, SHARED_SOUL_ENEMY_LEEVER)"
"soul_stalchild": "shared_soul_enemy(SOUL_ENEMY_STALCHILD, SHARED_SOUL_ENEMY_STALCHILD)"
"soul_thief_fighter": "shared_soul_enemy(SOUL_ENEMY_THIEVES, SHARED_SOUL_ENEMY_THIEVES)"

"shared_soul_misc(a,b)": "cond(setting(sharedSoulsMisc), soul_misc(b), soul_misc(a))"
"soul_gs": "shared_soul_misc(SOUL_MISC_GS, SHARED_SOUL_MISC_GS)"
"soul_business_scrub": "shared_soul_misc(SOUL_MISC_BUSINESS_SCRUB, SHARED_SOUL_MISC_BUSINESS_SCRUB)"

# NPC Souls
"shared_soul_npc(a, b)": "cond(setting(sharedSoulsNpc), soul_npc(b), soul_npc(a))"
"soul_banker": "shared_soul_npc(SOUL_NPC_BANKER, SHARED_SOUL_NPC_BANKER)"
"soul_astronomer": "shared_soul_npc(SOUL_NPC_ASTRONOMER, SHARED_SOUL_NPC_ASTRONOMER)"
"soul_gorman": "shared_soul_npc(SOUL_NPC_GORMAN, SHARED_SOUL_NPC_GORMAN)"
"soul_honey_darling": "shared_soul_npc(SOUL_NPC_HONEY_DARLING, SHARED_SOUL_NPC_HONEY_DARLING)"
"soul_composer_bros": "shared_soul_npc(SOUL_NPC_COMPOSER_BROS, SHARED_SOUL_NPC_COMPOSER_BROS)"
"soul_citizen": "shared_soul_npc(SOUL_NPC_CITIZEN, SHARED_SOUL_NPC_CITIZEN)"
"soul_bombers": "shared_soul_npc(SOUL_NPC_BOMBERS, SHARED_SOUL_NPC_BOMBERS)"
"soul_fishing_pond_owner": "shared_soul_npc(SOUL_NPC_FISHING_POND_OWNER, SHARED_SOUL_NPC_FISHING_POND_OWNER)"
"soul_zora_shopkeeper": "shared_soul_npc(SOUL_NPC_ZORA_SHOPKEEPER, SHARED_SOUL_NPC_ZORA_SHOPKEEPER)"
"soul_zora": "shared_soul_npc(SOUL_NPC_ZORA, SHARED_SOUL_NPC_ZORA)"
"soul_goron_shopkeeper": "shared_soul_npc(SOUL_NPC_GORON_SHOPKEEPER, SHARED_SOUL_NPC_GORON_SHOPKEEPER)"
"soul_medigoron": "shared_soul_npc(SOUL_NPC_MEDIGORON, SHARED_SOUL_NPC_MEDIGORON)"
"soul_goron": "shared_soul_npc(SOUL_NPC_GORON, SHARED_SOUL_NPC_GORON)"
"soul_goron_child": "shared_soul_npc(SOUL_NPC_GORON_CHILD, SHARED_SOUL_NPC_GORON_CHILD)"
"soul_biggoron": "shared_soul_npc(SOUL_NPC_BIGGORON, SHARED_SOUL_NPC_BIGGORON)"
"soul_dampe": "shared_soul_npc(SOUL_NPC_DAMPE, SHARED_SOUL_NPC_DAMPE)"
"soul_guru_guru": "shared_soul_npc(SOUL_NPC_GURU_GURU, SHARED_SOUL_NPC_GURU_GURU)"
"soul_talon": "shared_soul_npc(SOUL_NPC_TALON, SHARED_SOUL_NPC_TALON)"
"soul_malon": "shared_soul_npc(SOUL_NPC_MALON, SHARED_SOUL_NPC_MALON)"
"soul_bombchu_bowling_lady": "shared_soul_npc(SOUL_NPC_BOMBCHU_BOWLING_LADY, SHARED_SOUL_NPC_BOMBCHU_BOWLING_LADY)"
"soul_shooting_gallery_owner": "shared_soul_npc(SOUL_NPC_SHOOTING_GALLERY_OWNER, SHARED_SOUL_NPC_SHOOTING_GALLERY_OWNER)"
"soul_poe_collector": "shared_soul_npc(SOUL_NPC_POE_COLLECTOR, SHARED_SOUL_NPC_POE_COLLECTOR)"
"soul_bazaar_shopkeeper": "shared_soul_npc(SOUL_NPC_BAZAAR_SHOPKEEPER, SHARED_SOUL_NPC_BAZAAR_SHOPKEEPER)"
"soul_bombchu_shopkeeper": "shared_soul_npc(SOUL_NPC_BOMBCHU_SHOPKEEPER, SHARED_SOUL_NPC_BOMBCHU_SHOPKEEPER)"
"soul_ruto": "shared_soul_npc(SOUL_NPC_RUTO, SHARED_SOUL_NPC_RUTO)"
"soul_anju": "shared_soul_npc(SOUL_NPC_ANJU, SHARED_SOUL_NPC_ANJU)"
"soul_carpenters": "shared_soul_npc(SOUL_NPC_CARPENTERS, SHARED_SOUL_NPC_CARPENTERS)"
"soul_chest_game_owner": "shared_soul_npc(SOUL_NPC_CHEST_GAME_OWNER, SHARED_SOUL_NPC_CHEST_GAME_OWNER)"
"soul_rooftop_man": "shared_soul_npc(SOUL_NPC_ROOFTOP_MAN, SHARED_SOUL_NPC_ROOFTOP_MAN)"
"soul_bean_salesman": "shared_soul_npc(SOUL_NPC_BEAN_SALESMAN, SHARED_SOUL_NPC_BEAN_SALESMAN)"
"soul_scientist": "shared_soul_npc(SOUL_NPC_SCIENTIST, SHARED_SOUL_NPC_SCIENTIST)"
"soul_grog": "shared_soul_npc(SOUL_NPC_GROG, SHARED_SOUL_NPC_GROG)"
"soul_dog_lady": "shared_soul_npc(SOUL_NPC_DOG_LADY, SHARED_SOUL_NPC_DOG_LADY)"
"soul_carpet_man": "shared_soul_npc(SOUL_NPC_CARPET_MAN, SHARED_SOUL_NPC_CARPET_MAN)"
"soul_old_hag": "shared_soul_npc(SOUL_NPC_OLD_HAG, SHARED_SOUL_NPC_OLD_HAG)"
"soul_thief_guard": "shared_soul_npc(SOUL_NPC_THIEVES, SHARED_SOUL_NPC_THIEVES)"

# Bottles
"shared_bottle(a, b)": "cond(setting(sharedBottles), has(b), has(a))"
"shared_bottle_renewable(a, b)": "cond(setting(sharedBottles), renewable(b), renewable(a))"
"shared_bottle_event(a, b, c)": "event(a) || (setting(sharedBottles) && (event(b) || event(c)))"
"has_bottle_empty": "shared_bottle(BOTTLE_EMPTY, SHARED_BOTTLE_EMPTY)"
"has_bottle_red": "shared_bottle(BOTTLE_POTION_RED, SHARED_BOTTLE_POTION_RED)"
"has_bottle_green": "shared_bottle(BOTTLE_POTION_GREEN, SHARED_BOTTLE_POTION_GREEN)"
"has_bottle_blue": "shared_bottle(BOTTLE_POTION_BLUE, SHARED_BOTTLE_POTION_BLUE)"
"has_bottle_milk": "shared_bottle(BOTTLE_MILK, SHARED_BOTTLE_MILK)"
"has_bottle_gold": "shared_bottle_event(GOLD_DUST_USED, OOT_GOLD_DUST_USED, MM_GOLD_DUST_USED)"
"has_bottle_letter": "((shared_bottle_event(KING_ZORA_LETTER, OOT_KING_ZORA_LETTER, MM_KING_ZORA_LETTER) && soul_npc(SOUL_NPC_KING_ZORA)) || setting(zoraKing, open)) && (!setting(sharedBottles) || shared_bottle_event(TOILET_RUTO_LETTER, OOT_TOILET_RUTO_LETTER, MM_TOILET_RUTO_LETTER))"
"has_bottle_chateau": "shared_bottle(BOTTLE_CHATEAU, SHARED_BOTTLE_CHATEAU)"
"has_bottle_fairy": "shared_bottle(BOTTLE_FAIRY, SHARED_BOTTLE_FAIRY)"
"has_bottle_poe": "shared_bottle(BOTTLE_POE, SHARED_BOTTLE_POE)"
"has_bottle_big_poe": "shared_bottle(BOTTLE_BIG_POE, SHARED_BOTTLE_BIG_POE)"
"has_bottle_fire": "shared_bottle(BOTTLE_BLUE_FIRE, SHARED_BOTTLE_BLUE_FIRE)"
"has_bottle": "has_bottle_empty || has_bottle_red || has_bottle_green || has_bottle_blue || has_bottle_milk || has_bottle_gold || has_bottle_letter || has_bottle_chateau || has_bottle_fairy || has_bottle_poe || has_bottle_big_poe || has_bottle_fire"
"has_blue_potion": "has_bottle && (shared_bottle_renewable(POTION_BLUE, SHARED_POTION_BLUE) || shared_bottle_renewable(BOTTLE_POTION_BLUE, SHARED_BOTTLE_POTION_BLUE))"
"has_red_potion": "has_bottle && (shared_bottle_renewable(POTION_RED, SHARED_POTION_RED) || shared_bottle_renewable(BOTTLE_POTION_RED, SHARED_BOTTLE_POTION_RED))"
"has_green_potion": "has_bottle && (shared_bottle_renewable(POTION_GREEN, SHARED_POTION_GREEN) || shared_bottle_renewable(BOTTLE_POTION_GREEN, SHARED_BOTTLE_POTION_GREEN))"
"has_milk": "has_bottle && (shared_bottle_renewable(MILK, SHARED_MILK) || shared_bottle_renewable(BOTTLE_MILK, SHARED_BOTTLE_MILK))"
"has_red_or_blue_potion": "has_red_potion || has_blue_potion"
"has_zora_egg": "has_bottle && (shared_bottle_event(ZORA_EGGS_HOOKSHOT_ROOM, OOT_ZORA_EGGS_HOOKSHOT_ROOM, MM_ZORA_EGGS_HOOKSHOT_ROOM) || shared_bottle_event(ZORA_EGGS_BARREL_MAZE, OOT_ZORA_EGGS_BARREL_MAZE, MM_ZORA_EGGS_BARREL_MAZE) || shared_bottle_event(ZORA_EGGS_LONE_GUARD, OOT_ZORA_EGGS_LONE_GUARD, MM_ZORA_EGGS_LONE_GUARD) || shared_bottle_event(ZORA_EGGS_TREASURE_ROOM, OOT_ZORA_EGGS_TREASURE_ROOM, MM_ZORA_EGGS_TREASURE_ROOM) || shared_bottle_event(ZORA_EGGS_PINNACLE_ROCK, OOT_ZORA_EGGS_PINNACLE_ROCK, MM_ZORA_EGGS_PINNACLE_ROCK))"
"has_all_zora_eggs": "has_bottle && shared_bottle_event(ZORA_EGGS_HOOKSHOT_ROOM, OOT_ZORA_EGGS_HOOKSHOT_ROOM, MM_ZORA_EGGS_HOOKSHOT_ROOM) && shared_bottle_event(ZORA_EGGS_BARREL_MAZE, OOT_ZORA_EGGS_BARREL_MAZE, MM_ZORA_EGGS_BARREL_MAZE) && shared_bottle_event(ZORA_EGGS_LONE_GUARD, OOT_ZORA_EGGS_LONE_GUARD, MM_ZORA_EGGS_LONE_GUARD) && shared_bottle_event(ZORA_EGGS_TREASURE_ROOM, OOT_ZORA_EGGS_TREASURE_ROOM, MM_ZORA_EGGS_TREASURE_ROOM) && shared_bottle_event(ZORA_EGGS_PINNACLE_ROCK, OOT_ZORA_EGGS_PINNACLE_ROCK, MM_ZORA_EGGS_PINNACLE_ROCK)"
"has_chateau": "has_bottle && (shared_bottle_renewable(CHATEAU, SHARED_CHATEAU) || shared_bottle_renewable(BOTTLE_CHATEAU, SHARED_BOTTLE_CHATEAU))"
"has_big_poe": "has_bottle && (shared_bottle_event(BIG_POE, OOT_BIG_POE, MM_BIG_POE) || shared_bottle_event(WELL_BIG_POE, OOT_WELL_BIG_POE, MM_WELL_BIG_POE) || shared_bottle_event(DAMPE_BIG_POE, OOT_DAMPE_BIG_POE, MM_DAMPE_BIG_POE) || shared_bottle_renewable(BOTTLE_BIG_POE, SHARED_BOTTLE_BIG_POE) || shared_bottle_renewable(BIG_POE, SHARED_BIG_POE))"
"has_bugs": "has_bottle && (shared_bottle_event(BUGS, OOT_BUGS, MM_BUGS) || shared_bottle_renewable(BUGS, SHARED_BUGS))"
"has_fish": "has_bottle && (shared_bottle_event(FISH, OOT_FISH, MM_FISH) || shared_bottle_renewable(FISH, SHARED_FISH))"
"has_water": "has_bottle && shared_bottle_event(WATER, OOT_WATER, MM_WATER)"
"has_mushroom": "has_bottle && shared_bottle_event(MUSHROOM, OOT_MUSHROOM, MM_MUSHROOM)"
"has_poe": "has_bottle && shared_bottle_event(POE, OOT_POE, MM_POE)"
"has_fairy": "has_bottle && shared_bottle_event(FAIRY, OOT_FAIRY, MM_FAIRY)"
"has_deku_princess": "has_bottle && shared_bottle_event(DEKU_PRINCESS, OOT_DEKU_PRINCESS, MM_DEKU_PRINCESS)"
"has_blue_fire_in_bottle": "has_bottle && (shared_bottle_event(BLUE_FIRE, OOT_BLUE_FIRE, MM_BLUE_FIRE) || shared_bottle_renewable(BLUE_FIRE, SHARED_BLUE_FIRE) || shared_bottle_renewable(BOTTLE_BLUE_FIRE, SHARED_BOTTLE_BLUE_FIRE))"
"has_ruto_letter": "shared_bottle(BOTTLE_RUTO_LETTER, SHARED_BOTTLE_RUTO_LETTER)"
"has_gold_dust": "shared_bottle(BOTTLED_GOLD_DUST, SHARED_BOTTLED_GOLD_DUST)"

# Settings
"is_goal_triforce": "setting(goal, triforce) || setting(goal, triforce3)"
